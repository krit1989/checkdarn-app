import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';

// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test ‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
void main() async {
  await Firebase.initializeApp();

  final firestore = FirebaseFirestore.instance;

  print('üßπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test...');

  try {
    // 1. ‡∏•‡∏ö reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÅ‡∏ñ‡∏ß‡∏û‡∏≤‡∏ô‡∏ó‡∏≠‡∏á"
    print('üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤ reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î...');

    final querySnapshot = await firestore
        .collection('reports')
        .where('description', isEqualTo: '‡∏°‡∏µ‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÅ‡∏ñ‡∏ß‡∏û‡∏≤‡∏ô‡∏ó‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö')
        .get();

    print('‡∏û‡∏ö ${querySnapshot.docs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');

    for (final doc in querySnapshot.docs) {
      final data = doc.data();
      print('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö: ${doc.id}');
      print('  - Title: ${data['title']}');
      print('  - Description: ${data['description']}');
      print('  - Location: ${data['location']}');
      print('  - Coordinates: (${data['lat']}, ${data['lng']})');

      await doc.reference.delete();
      print('  ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }

    // 2. ‡∏•‡∏ö reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ location = "Phan Thong, Chonburi" ‡πÅ‡∏ï‡πà‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ú‡∏¥‡∏î
    print('\nüìç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤ reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ location ‡∏ú‡∏¥‡∏î...');

    final locationQuery = await firestore
        .collection('reports')
        .where('location', isEqualTo: 'Phan Thong, Chonburi')
        .get();

    print('‡∏û‡∏ö ${locationQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ location ‡∏ú‡∏¥‡∏î');

    for (final doc in locationQuery.docs) {
      final data = doc.data();
      print('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö: ${doc.id}');
      print('  - Title: ${data['title']}');
      print('  - Location: ${data['location']}');
      print('  - Coordinates: (${data['lat']}, ${data['lng']})');

      await doc.reference.delete();
      print('  ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }

    // 3. ‡∏•‡∏ö reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏¥‡∏Å‡∏±‡∏î test ‡πÄ‡∏î‡∏¥‡∏° (13.0827, 101.0028)
    print('\nüéØ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤ reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏¥‡∏Å‡∏±‡∏î test ‡πÄ‡∏î‡∏¥‡∏°...');

    final testCoordQuery = await firestore
        .collection('reports')
        .where('lat', isEqualTo: 13.0827)
        .get();

    final docsToDelete = testCoordQuery.docs.where((doc) {
      final data = doc.data();
      return data['lng'] == 101.0028;
    }).toList();

    print('‡∏û‡∏ö ${docsToDelete.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏¥‡∏Å‡∏±‡∏î test ‡πÄ‡∏î‡∏¥‡∏°');

    for (final doc in docsToDelete) {
      final data = doc.data();
      print('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö: ${doc.id}');
      print('  - Title: ${data['title']}');
      print('  - Location: ${data['location']}');
      print('  - Coordinates: (${data['lat']}, ${data['lng']})');

      await doc.reference.delete();
      print('  ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }

    // 4. ‡∏•‡∏ö reports ‡∏ó‡∏µ‡πà‡∏°‡∏µ userId = 'test_user_123'
    print('\nüë§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤ reports ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô test user...');

    final testUserQuery = await firestore
        .collection('reports')
        .where('userId', isEqualTo: 'test_user_123')
        .get();

    print('‡∏û‡∏ö ${testUserQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô test user');

    for (final doc in testUserQuery.docs) {
      final data = doc.data();
      print('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö: ${doc.id}');
      print('  - Title: ${data['title']}');
      print('  - UserId: ${data['userId']}');
      print('  - Location: ${data['location']}');

      await doc.reference.delete();
      print('  ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }

    print('\nüéâ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    print('\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠...');
    final remainingQuery = await firestore
        .collection('reports')
        .orderBy('timestamp', descending: true)
        .limit(5)
        .get();

    print('Reports ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ${remainingQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:');
    for (int i = 0; i < remainingQuery.docs.length; i++) {
      final doc = remainingQuery.docs[i];
      final data = doc.data();
      print('${i + 1}. ${doc.id}');
      print('   Title: ${data['title']}');
      print('   Location: ${data['location']}');
      print('   Coordinates: (${data['lat']}, ${data['lng']})');
      if (data['timestamp'] != null) {
        final timestamp = data['timestamp'] as Timestamp;
        print('   Time: ${timestamp.toDate().toString()}');
      }
      print('');
    }
  } catch (e) {
    print('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $e');
  }
}

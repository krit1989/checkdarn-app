import 'package:flutter/material.dart';
import 'package:flutter/foundation.dart'; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö kIsWeb
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'firebase_options.dart';
import 'screens/map_screen.dart';
import 'services/firebase_service.dart';
import 'services/auth_service.dart';
import 'services/cleanup_service.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // üöÄ ‡πÄ‡∏õ‡∏¥‡∏î Local Persistence ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß (Platform-specific)
  try {
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web ‡πÉ‡∏ä‡πâ enablePersistence, ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mobile ‡πÉ‡∏ä‡πâ Settings
    if (kIsWeb) {
      await FirebaseFirestore.instance.enablePersistence(
        const PersistenceSettings(synchronizeTabs: true),
      );
      print('‚úÖ Firebase persistence enabled for Web!');
    } else {
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mobile ‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Settings ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
      print('‚úÖ Firebase persistence will be set via Settings for Mobile');
    }
  } catch (e) {
    print('‚ö†Ô∏è Firebase persistence setup note: $e');
  }

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firestore settings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
  FirebaseFirestore.instance.settings = const Settings(
    persistenceEnabled: true,
    cacheSizeBytes: Settings.CACHE_SIZE_UNLIMITED, // ‡πÄ‡∏û‡∏¥‡πà‡∏° cache

    // üîå Connection Pool Limiting - ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    // ‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏î load ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏¢‡∏≠‡∏∞
  );

  // Initialize AuthService
  await AuthService.initialize();

  // Migrate existing data to TTL ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° expireAt field
  await FirebaseService.initializeAndMigrate();

  // üöÄ ‡πÄ‡∏û‡∏¥‡πà‡∏° Smart Prefetch System
  _startSmartPrefetch();

  // üßπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏ó‡∏∏‡∏Å 48 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
  CleanupService.startAutoCleanup();

  runApp(const MyApp());
}

/// üöÄ Smart Prefetch System - ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏â‡∏•‡∏≤‡∏î
void _startSmartPrefetch() {
  // ‡πÄ‡∏£‡∏¥‡πà‡∏° prefetch ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å app ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô startup
  Future.delayed(const Duration(seconds: 2), () {
    FirebaseService.prefetchRecentReports();
    print('üöÄ Smart prefetch started - data will load instantly!');
  });
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CheckDarn - ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        fontFamily: 'Sarabun',
      ),
      home: const MapScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

/**
 * üó∫Ô∏è **Location Utilities for Thailand**
 * ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
 * 
 * **‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå:**
 * - Reverse geocoding ‡∏à‡∏≤‡∏Å lat/lng ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
 * - Distance calculation
 * - Province name normalization
 * - Radius topic generation
 */

const admin = require('firebase-admin');

/**
 * üèõÔ∏è **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏±‡πâ‡∏á 77 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î + ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£**
 * ‡∏£‡∏ß‡∏°‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
 */
const THAI_PROVINCES = {
  // ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠
  'chiangmai': { name: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà', lat: 18.7883, lng: 98.9853, region: 'north' },
  'chiangrai': { name: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢', lat: 19.9105, lng: 99.8407, region: 'north' },
  'lamphun': { name: '‡∏•‡∏≥‡∏û‡∏π‡∏ô', lat: 18.5745, lng: 99.0096, region: 'north' },
  'lampang': { name: '‡∏•‡∏≥‡∏õ‡∏≤‡∏á', lat: 18.2932, lng: 99.4956, region: 'north' },
  'mae_hong_son': { name: '‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô', lat: 19.3014, lng: 97.9676, region: 'north' },
  'nan': { name: '‡∏ô‡πà‡∏≤‡∏ô', lat: 18.7793, lng: 100.7724, region: 'north' },
  'phayao': { name: '‡∏û‡∏∞‡πÄ‡∏¢‡∏≤', lat: 19.1921, lng: 99.8956, region: 'north' },
  'phrae': { name: '‡πÅ‡∏û‡∏£‡πà', lat: 18.1459, lng: 100.1410, region: 'north' },
  'uttaradit': { name: '‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå', lat: 17.6200, lng: 100.0992, region: 'north' },

  // ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏â‡∏µ‡∏¢‡∏á‡πÄ‡∏´‡∏ô‡∏∑‡∏≠
  'khon_kaen': { name: '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô', lat: 16.4419, lng: 102.8360, region: 'northeast' },
  'nakhon_ratchasima': { name: '‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤', lat: 14.9799, lng: 102.0977, region: 'northeast' },
  'udon_thani': { name: '‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ', lat: 17.4138, lng: 102.7859, region: 'northeast' },
  'buriram': { name: '‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå', lat: 14.9930, lng: 103.1029, region: 'northeast' },
  'chaiyaphum': { name: '‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥', lat: 15.8069, lng: 102.0317, region: 'northeast' },
  'kalasin': { name: '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå', lat: 16.4322, lng: 103.5059, region: 'northeast' },
  'loei': { name: '‡πÄ‡∏•‡∏¢', lat: 17.4860, lng: 101.7223, region: 'northeast' },
  'maha_sarakham': { name: '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°', lat: 16.1840, lng: 103.3057, region: 'northeast' },
  'mukdahan': { name: '‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£', lat: 16.5419, lng: 104.7234, region: 'northeast' },
  'nakhon_phanom': { name: '‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°', lat: 17.4085, lng: 104.7686, region: 'northeast' },
  'nong_bua_lam_phu': { name: '‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π', lat: 17.2044, lng: 102.4281, region: 'northeast' },
  'nong_khai': { name: '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢', lat: 17.8782, lng: 102.7412, region: 'northeast' },
  'roi_et': { name: '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î', lat: 16.0544, lng: 103.6533, region: 'northeast' },
  'sakon_nakhon': { name: '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£', lat: 17.1547, lng: 104.1486, region: 'northeast' },
  'si_sa_ket': { name: '‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©', lat: 15.1186, lng: 104.3220, region: 'northeast' },
  'surin': { name: '‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå', lat: 14.8818, lng: 103.4941, region: 'northeast' },
  'ubon_ratchathani': { name: '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ', lat: 15.2286, lng: 104.8666, region: 'northeast' },
  'yasothon': { name: '‡∏¢‡πÇ‡∏™‡∏ò‡∏£', lat: 15.7924, lng: 104.1450, region: 'northeast' },
  'amnat_charoen': { name: '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç', lat: 15.8651, lng: 104.6259, region: 'northeast' },
  'bueng_kan': { name: '‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨', lat: 18.3609, lng: 103.6469, region: 'northeast' },

  // ‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á
  'bangkok': { name: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£', lat: 13.7563, lng: 100.5018, region: 'central' },
  'nonthaburi': { name: '‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ', lat: 13.8621, lng: 100.5144, region: 'central' },
  'pathum_thani': { name: '‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ', lat: 14.0208, lng: 100.5250, region: 'central' },
  'samut_prakan': { name: '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£', lat: 13.5990, lng: 100.5998, region: 'central' },
  'samut_sakhon': { name: '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£', lat: 13.5476, lng: 100.2740, region: 'central' },
  'samut_songkhram': { name: '‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°', lat: 13.4105, lng: 100.0020, region: 'central' },
  'nakhon_pathom': { name: '‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°', lat: 13.8199, lng: 100.0617, region: 'central' },
  'ayutthaya': { name: '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤', lat: 14.3532, lng: 100.5754, region: 'central' },
  'ang_thong': { name: '‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á', lat: 14.5896, lng: 100.4548, region: 'central' },
  'lopburi': { name: '‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ', lat: 14.7995, lng: 100.6534, region: 'central' },
  'sing_buri': { name: '‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ', lat: 14.8936, lng: 100.3967, region: 'central' },
  'chai_nat': { name: '‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó', lat: 15.1851, lng: 100.1248, region: 'central' },
  'suphan_buri': { name: '‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ', lat: 14.4746, lng: 100.1217, region: 'central' },
  'uthai_thani': { name: '‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ', lat: 15.3794, lng: 100.0244, region: 'central' },
  'kanchanaburi': { name: '‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ', lat: 14.0227, lng: 99.5328, region: 'central' },
  'ratchaburi': { name: '‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ', lat: 13.5282, lng: 99.8134, region: 'central' },
  'phetchaburi': { name: '‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ', lat: 13.1119, lng: 99.9398, region: 'central' },
  'prachuap_khiri_khan': { name: '‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå', lat: 11.8103, lng: 99.7971, region: 'central' },

  // ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å
  'chonburi': { name: '‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ', lat: 13.3611, lng: 100.9847, region: 'east' },
  'rayong': { name: '‡∏£‡∏∞‡∏¢‡∏≠‡∏á', lat: 12.6807, lng: 101.2818, region: 'east' },
  'chanthaburi': { name: '‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ', lat: 12.6117, lng: 102.1038, region: 'east' },
  'trat': { name: '‡∏ï‡∏£‡∏≤‡∏î', lat: 12.2436, lng: 102.5152, region: 'east' },
  'sa_kaeo': { name: '‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß', lat: 13.8240, lng: 102.0645, region: 'east' },
  'prachinburi': { name: '‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ', lat: 14.0426, lng: 101.3703, region: 'east' },
  'nakhon_nayok': { name: '‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å', lat: 14.2069, lng: 101.2130, region: 'east' },

  // ‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ
  'chumphon': { name: '‡∏ä‡∏∏‡∏°‡∏û‡∏£', lat: 10.4930, lng: 99.1800, region: 'south' },
  'ranong': { name: '‡∏£‡∏∞‡∏ô‡∏≠‡∏á', lat: 9.9558, lng: 98.6353, region: 'south' },
  'surat_thani': { name: '‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ', lat: 9.1382, lng: 99.3215, region: 'south' },
  'phang_nga': { name: '‡∏û‡∏±‡∏á‡∏á‡∏≤', lat: 8.4504, lng: 98.5254, region: 'south' },
  'phuket': { name: '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï', lat: 7.8804, lng: 98.3923, region: 'south' },
  'krabi': { name: '‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà', lat: 8.0863, lng: 98.9063, region: 'south' },
  'nakhon_si_thammarat': { name: '‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä', lat: 8.4304, lng: 99.9631, region: 'south' },
  'phatthalung': { name: '‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á', lat: 7.6166, lng: 100.0714, region: 'south' },
  'trang': { name: '‡∏ï‡∏£‡∏±‡∏á', lat: 7.5563, lng: 99.6114, region: 'south' },
  'satun': { name: '‡∏™‡∏ï‡∏π‡∏•', lat: 6.6231, lng: 100.0673, region: 'south' },
  'songkhla': { name: '‡∏™‡∏á‡∏Ç‡∏•‡∏≤', lat: 7.1756, lng: 100.6135, region: 'south' },
  'pattani': { name: '‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ', lat: 6.8693, lng: 101.2502, region: 'south' },
  'yala': { name: '‡∏¢‡∏∞‡∏•‡∏≤', lat: 6.5410, lng: 101.2802, region: 'south' },
  'narathiwat': { name: '‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™', lat: 6.4254, lng: 101.8253, region: 'south' },

  // ‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å
  'tak': { name: '‡∏ï‡∏≤‡∏Å', lat: 16.8839, lng: 99.1256, region: 'west' },
  'mae_sot': { name: '‡πÅ‡∏°‡πà‡∏™‡∏≠‡∏î', lat: 16.7161, lng: 98.5445, region: 'west' },
  'kamphaeng_phet': { name: '‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£', lat: 16.4823, lng: 99.5225, region: 'west' },
  'nakhon_sawan': { name: '‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå', lat: 15.7047, lng: 100.1378, region: 'west' },
  'phichit': { name: '‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£', lat: 16.4387, lng: 100.3489, region: 'west' },
  'phitsanulok': { name: '‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å', lat: 16.8211, lng: 100.2659, region: 'west' },
  'sukhothai': { name: '‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢', lat: 17.0061, lng: 99.8230, region: 'west' }
};

/**
 * üìè **‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 2 ‡∏à‡∏∏‡∏î (Haversine Formula)**
 * @param {number} lat1 - Latitude ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 1
 * @param {number} lng1 - Longitude ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 1
 * @param {number} lat2 - Latitude ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 2
 * @param {number} lng2 - Longitude ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 2
 * @returns {number} ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
 */
function calculateDistance(lat1, lng1, lat2, lng2) {
  const R = 6371; // ‡∏£‡∏±‡∏®‡∏°‡∏µ‡πÇ‡∏•‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
  const dLat = toRadians(lat2 - lat1);
  const dLng = toRadians(lng2 - lng1);
  
  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
           Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *
           Math.sin(dLng / 2) * Math.sin(dLng / 2);
  
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  return R * c;
}

/**
 * üîÑ **‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏á‡∏®‡∏≤‡πÄ‡∏õ‡πá‡∏ô Radians**
 */
function toRadians(degrees) {
  return degrees * (Math.PI / 180);
}

/**
 * üó∫Ô∏è **‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î (Reverse Geocoding)**
 * @param {number} latitude - ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î
 * @param {number} longitude - ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î
 * @returns {string} ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© (‡πÄ‡∏ä‡πà‡∏ô 'bangkok', 'chiang_mai')
 */
async function getProvinceFromCoords(latitude, longitude) {
  try {
    let nearestProvince = null;
    let minDistance = Infinity;

    // ‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    for (const [key, province] of Object.entries(THAI_PROVINCES)) {
      const distance = calculateDistance(
        latitude, longitude,
        province.lat, province.lng
      );
      
      if (distance < minDistance) {
        minDistance = distance;
        nearestProvince = key;
      }
    }

    console.log(`üìç Location: ${latitude}, ${longitude} ‚Üí Province: ${nearestProvince} (${minDistance.toFixed(2)} km)`);
    return nearestProvince;
    
  } catch (error) {
    console.error('‚ùå Error in reverse geocoding:', error);
    // Default fallback ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û
    return 'bangkok';
  }
}

/**
 * üè∑Ô∏è **‡∏™‡∏£‡πâ‡∏≤‡∏á Topics ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Location-based Notifications**
 * @param {number} latitude - ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î
 * @param {number} longitude - ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î
 * @param {number} radiusKm - ‡∏£‡∏±‡∏®‡∏°‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£ (default: 30)
 * @returns {Object} { provinceTopics: string[], radiusTopics: string[] }
 */
async function generateLocationTopics(latitude, longitude, radiusKm = 30) {
  try {
    // 1. ‡∏´‡∏≤‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const province = await getProvinceFromCoords(latitude, longitude);
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Province Topic
    const provinceTopic = `${province}_notifications`;
    
    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Radius Topic (precision 4 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‚âà 10m accuracy)
    const lat = latitude.toFixed(4);
    const lng = longitude.toFixed(4);
    const radiusTopic = `radius_${radiusKm}km_${lat}_${lng}`;
    
    // 4. ‡∏´‡∏≤ Cross-province topics (‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ)
    const nearbyProvinces = [];
    for (const [key, provinceData] of Object.entries(THAI_PROVINCES)) {
      if (key === province) continue; // ‡∏Ç‡πâ‡∏≤‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
      
      const distance = calculateDistance(
        latitude, longitude,
        provinceData.lat, provinceData.lng
      );
      
      // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
      if (distance <= radiusKm) {
        nearbyProvinces.push(`${key}_notifications`);
      }
    }

    const result = {
      primary: provinceTopic,
      radius: radiusTopic,
      crossProvince: nearbyProvinces,
      allTopics: [provinceTopic, radiusTopic, ...nearbyProvinces],
      location: {
        province: THAI_PROVINCES[province]?.name || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö',
        region: THAI_PROVINCES[province]?.region || 'unknown'
      }
    };

    console.log(`üéØ Generated Topics:`, result);
    return result;
    
  } catch (error) {
    console.error('‚ùå Error generating location topics:', error);
    
    // Fallback topics
    return {
      primary: 'bangkok_notifications',
      radius: `radius_${radiusKm}km_13.7563_100.5018`,
      crossProvince: [],
      allTopics: ['bangkok_notifications', `radius_${radiusKm}km_13.7563_100.5018`],
      location: {
        province: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        region: 'central'
      }
    };
  }
}

/**
 * üîç **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà**
 * @param {number} userLat - ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @param {number} userLng - ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @param {number} postLat - ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î‡πÇ‡∏û‡∏™
 * @param {number} postLng - ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î‡πÇ‡∏û‡∏™
 * @param {number} radiusKm - ‡∏£‡∏±‡∏®‡∏°‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
 * @returns {boolean} true ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏±‡∏®‡∏°‡∏µ
 */
function isWithinRadius(userLat, userLng, postLat, postLng, radiusKm) {
  const distance = calculateDistance(userLat, userLng, postLat, postLng);
  return distance <= radiusKm;
}

/**
 * üìä **‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Location Topics**
 */
async function getLocationTopicsStats() {
  try {
    const stats = {
      totalProvinces: Object.keys(THAI_PROVINCES).length,
      regions: {},
      sampleTopics: [
        'bangkok_notifications',
        'chiang_mai_notifications',
        'radius_30km_13.7563_100.5018',
        'radius_30km_18.7883_98.9853'
      ]
    };

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏†‡∏≤‡∏Ñ
    for (const province of Object.values(THAI_PROVINCES)) {
      stats.regions[province.region] = (stats.regions[province.region] || 0) + 1;
    }

    console.log('üìä Location Topics Statistics:', stats);
    return stats;
    
  } catch (error) {
    console.error('‚ùå Error getting location stats:', error);
    return null;
  }
}

module.exports = {
  getProvinceFromCoords,
  generateLocationTopics,
  calculateDistance,
  isWithinRadius,
  getLocationTopicsStats,
  THAI_PROVINCES
};

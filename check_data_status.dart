import 'package:cloud_firestore/cloud_firestore.dart';

/// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
/// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° status
void main() async {
  print('üîç === ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===');

  final firestore = FirebaseFirestore.instance;

  try {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô pending (‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï)
    print('\nüìä 1. ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ PENDING (‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï):');
    final pendingQuery = await firestore
        .collection('camera_reports')
        .where('status', isEqualTo: 'pending')
        .get();

    print('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${pendingQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô');
    for (final doc in pendingQuery.docs.take(3)) {
      final data = doc.data();
      print('   - ${data['roadName']} (ID: ${doc.id})');
      print(
          '     Upvotes: ${data['upvotes']}, Downvotes: ${data['downvotes']}');
      print('     Confidence: ${data['confidenceScore']}');
    }

    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô verified (‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï)
    print('\n‚úÖ 2. ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ VERIFIED (‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•):');
    final verifiedQuery = await firestore
        .collection('camera_reports')
        .where('status', isEqualTo: 'verified')
        .get();

    print('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${verifiedQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô');
    for (final doc in verifiedQuery.docs.take(5)) {
      final data = doc.data();
      print('   - ${data['roadName']} (ID: ${doc.id})');
      print(
          '     Final Upvotes: ${data['upvotes']}, Downvotes: ${data['downvotes']}');
      print('     Final Confidence: ${data['confidenceScore']}');
      print('     Verified At: ${data['verifiedAt']}');
      print('     Verified By: ${data['verifiedBy']}');
    }

    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô rejected
    print('\n‚ùå 3. ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ REJECTED:');
    final rejectedQuery = await firestore
        .collection('camera_reports')
        .where('status', isEqualTo: 'rejected')
        .get();

    print('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${rejectedQuery.docs.length} ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô');
    for (final doc in rejectedQuery.docs.take(3)) {
      final data = doc.data();
      print('   - ${data['roadName']} (ID: ${doc.id})');
      print(
          '     Final Upvotes: ${data['upvotes']}, Downvotes: ${data['downvotes']}');
      print('     Final Confidence: ${data['confidenceScore']}');
    }

    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    print('\nüìà 4. ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:');
    final allQuery = await firestore.collection('camera_reports').get();

    final statusCount = <String, int>{};
    for (final doc in allQuery.docs) {
      final status = doc.data()['status'] ?? 'unknown';
      statusCount[status] = (statusCount[status] ?? 0) + 1;
    }

    statusCount.forEach((status, count) {
      print('   $status: $count ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô');
    });

    print('\nüéØ ‡∏™‡∏£‡∏∏‡∏õ:');
    print('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ - ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    print('üì± ‡πÅ‡∏Ñ‡πà‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏ß‡∏ï‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å pending ‚Üí verified');
    print('üîç ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• verified ‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getVerifiedReports()');

    // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å (‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å promote ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß)
    print('\nüéØ 5. ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å (‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà verified):');
    final speedCamerasQuery = await firestore
        .collection('speed_cameras')
        .where('source', isEqualTo: 'community_verified')
        .get();

    print('   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô: ${speedCamerasQuery.docs.length} ‡∏ï‡∏±‡∏ß');
    for (final doc in speedCamerasQuery.docs.take(3)) {
      final data = doc.data();
      print('   - ${data['roadName']} (ID: ${doc.id})');
      print('     Source Report ID: ${data['sourceReportId']}');
      print('     Speed Limit: ${data['speedLimit']} km/h');
    }
  } catch (e) {
    print('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $e');
  }
}
